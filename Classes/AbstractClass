'''
Task
Given a Book class and a Solution class, write a MyBook class that does the following:

Inherits from Book
Has a parameterized constructor taking these  parameters:
1. string title
2. string author
3. int price
Implements the Book class' abstract display() method so it prints these 3 lines:
1. Title, a space, and then the current instance's title.
2. Author, a space, and then the current instance's author.
3. Price, a space, and then the current instance's price.

Sample Input
The Alchemist
Paulo Coelho
248

Sample Output
Title: The Alchemist
Author: Paulo Coelho
Price: 248
'''

from abc import ABCMeta, abstractmethod
class Book(object, metaclass=ABCMeta):
    def __init__(self,title,author):
        self.title=title
        self.author=author   
    @abstractmethod
    def display(): pass

class MyBook(Book):
    def __init__(self, title, author, price):
        super().__init__(title, author)
        self.__price = price
    def display(self):
        print(f"Title: {title}")
        print(f"Author: {author}")
        print(f"Price: {price}")
        
title=input()
author=input()
price=int(input())
new_novel=MyBook(title,author,price)
new_novel.display()
